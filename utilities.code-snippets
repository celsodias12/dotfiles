{
  // Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  "Console Log": {
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "prefix": "cl",
    "body": "console.log(${TM_SELECTED_TEXT:'${1:Here}'})",
    "description": "Log output to the console"
  },
  "Console Time": {
    "scope": "javascript, typescript, javascriptreact, typescriptreact",
    "prefix": "ct",
    "body": ["console.time('$1')", "${TM_SELECTED_TEXT:$2}", "console.timeEnd('$1')"],
    "description": "Log benchmark to console"
  },
  "React component": {
    "scope": "javascriptreact, typescriptreact",
    "prefix": "rc",
    "body": [
      "import { ReactNode } from 'react'",
      "",
      "import { Container } from './styles'",
      "",
      "type $1Props = {",
      "  children: ReactNode",
      "}",
      "",
      "export function $1({ children }: $1Props) {",
      "  return (",
      "    <Container>",
      "      <h1>$1</h1>",
      "      {children}",
      "    </Container>",
      "  )",
      "}"
    ]
  },
  "React styled components": {
    "scope": "javascript, typescript",
    "prefix": "rsc",
    "body": ["import styled from 'styled-components'", "", "export const Container = styled.div`", "  $1", "`"],
    "description": "React styled components"
  },
  "React native styleSheet": {
    "scope": "javascript, typescript",
    "prefix": "rns",
    "body": [
      "import { StyleSheet } from 'react-native'",
      "",
      "export const styles = StyleSheet.create({",
      "  $1: {",
      "    $2",
      "  }",
      "})"
    ],
    "description": "React native styleSheet"
  },
  "React native styleSheet themed": {
    "scope": "javascript, typescript",
    "prefix": "rnst",
    "body": [
      "import { StyleSheetThemed } from 'react-native-stylesheet-themed'",
      "",
      "export const useStyles = StyleSheetThemed.create(theme => ({",
      "  $1: {",
      "    $2",
      "  },",
      "}))"
    ],
    "description": "React native styleSheet themed"
  },
  "React native component styleSheet themed": {
    "scope": "javascriptreact, typescriptreact",
    "prefix": "rncst",
    "body": [
      "import { ReactNode } from 'react'",
      "import { View, Text } from 'react-native'",
      "",
      "import { useStyles } from './styles'",
      "",
      "type $1Props = {",
      "  children: ReactNode",
      "}",
      "",
      "export function $1({ children }: $1Props) {",
      "  const styles = useStyles()",
      "",
      "  return (",
      "    <View style={styles.container}>",
      "      <Text>$1</Text>",
      "      {children}",
      "    </View>",
      "  )",
      "}"
    ],
    "description": "React native component styleSheet themed"
  },
  "React native component styled components": {
    "scope": "javascriptreact, typescriptreact",
    "prefix": "rncsc",
    "body": [
      "import { ReactNode } from 'react'",
      "import { Text } from 'react-native'",
      "",
      "import { Container } from './styles'",
      "",
      "type $1Props = {",
      "  children: ReactNode",
      "}",
      "",
      "export function $1({ children }: $1Props) {",
      "  return (",
      "    <Container>",
      "      <Text>$1</Text>",
      "      {children}",
      "    </Container>",
      "  )",
      "}"
    ],
    "description": "React native component styled components"
  },
  "React native styled components": {
    "scope": "javascript, typescript",
    "prefix": "rnsc",
    "body": ["import styled from 'styled-components/native'", "", "export const Container = styled.View`", "", "`"],
    "description": "React native styled components"
  }
}
